// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum PersonType {
  COUNCIL_MEMBER
  MAYOR
  CITY_CLERK
  CITY_ATTORNEY
}

model Person {
  id                        Int                 @id @default(autoincrement())
  createdAt                 DateTime            @default(now())
  updatedAt                 DateTime            @updatedAt
  fullName                  String              @unique @db.VarChar(255)
  email                     String              @unique @db.VarChar(255)
  phoneNumber               Int?
  ward                      Int?
  personType                PersonType
  meetingsAttended          Meeting[]
  initiatedMotions          Motion[]            @relation("Motion_Initiator")
  secondedMotions           Motion[]            @relation("Motion_Seconder")
  introducedResolutions     Resolution[]        @relation("Resolution_IntroducedBy")
  resolutionAyeVotes        Resolution[]        @relation("Resolution_Aye")
  resolutionNayVotes        Resolution[]        @relation("Resolution_Nay")
  introducedBills           Bill[]              @relation("Bill_IntroducedBy")
  billAyeVotes              Bill[]              @relation("Bill_Aye")
  billNayVotes              Bill[]              @relation("Bill_Nay")
  referredBoardAppointments BoardAppointment[]  @relation("BoardAppointment_Referrer")
  acceptedRequests          Request[]           @relation("Request_Acceptor")
  secondedRequests          Request[]           @relation("Request_SecondedBy")
  announcedAnnouncements    Announcement[]      @relation("Announcement_Announcer")
}

model Meeting {
  id                        Int                     @id @default(autoincrement())
  createdAt                 DateTime                @default(now())
  updatedAt                 DateTime                @updatedAt
  date                      DateTime?
  attendees                 Person[]
  motions                   Motion[]
  hearingFromCitizens       HearingFromCitizen[]
  proclamations             Proclamation[]
  resolutions               Resolution[]
  communications            Communication[]
  publicHearings            PublicHearing[]
  bills                     Bill[]
  boardAppointments         BoardAppointment[]
  requests                  Request[]
  announcements             Announcement[]
}

enum Action {
  APPROVE_MINUTES
  ADJOURN
  FIRST_READ
  SECOND_READ
  THIRD_READ
  REPORT
  PRESENT
  ADD_BILL
  ANNOUNCE
  APPOINT
  REAPPOINT
  ACCEPT
  SUSPEND
  POSTPONE
}

model Motion {
  id                        Int                      @id @default(autoincrement())
  createdAt                 DateTime                 @default(now())
  updatedAt                 DateTime                 @updatedAt
  carried                   Boolean                  @default(false)
  action                    Action
  initiatorId               Int
  initiator                 Person                   @relation("Motion_Initiator", fields: [initiatorId], references: [id])
  seconderId                Int?
  seconder                  Person?                  @relation("Motion_Seconder", fields: [seconderId], references: [id])
  hearingFromCitizenId      Int?
  hearingFromCitizen        HearingFromCitizen?      @relation(fields: [hearingFromCitizenId], references: [id])
  proclamationId            Int?
  proclamation              Proclamation?            @relation(fields: [proclamationId], references: [id])
  resolutionId              Int?
  resolution                Resolution?              @relation(fields: [resolutionId], references: [id])
  communicationId           Int?
  communication             Communication?           @relation(fields: [communicationId], references: [id])
  publicHearingId           Int?
  publicHearing             PublicHearing?           @relation(fields: [publicHearingId], references: [id])
  billId                    Int?
  bill                      Bill?                    @relation(fields: [billId], references: [id])
  boardAppointmentId        Int?
  boardAppointment          BoardAppointment?        @relation(fields: [boardAppointmentId], references: [id])
  requestId                 Int?
  request                   Request?                 @relation(fields: [requestId], references: [id])
  announcementId            Int?
  announcement              Announcement?            @relation(fields: [announcementId], references: [id])
  meetingId                 Int
  meeting                   Meeting                  @relation(fields: [meetingId], references: [id])
}

model HearingFromCitizen {
  id                        Int                      @id @default(autoincrement())
  createdAt                 DateTime                 @default(now())
  updatedAt                 DateTime                 @updatedAt
  from                      String?                  @db.VarChar(255)
  content                   String?                  @db.Text
  meetingId                 Int
  meeting                   Meeting                  @relation(fields: [meetingId], references: [id])
  fromMotion                Motion?
}

model Proclamation {
  id                        Int                      @id @default(autoincrement())
  createdAt                 DateTime                 @default(now())
  updatedAt                 DateTime                 @updatedAt
  presentedTo               String?                  @db.VarChar(255)
  content                   String?                  @db.Text
  meetingId                 Int
  meeting                   Meeting                  @relation(fields: [meetingId], references: [id])
  fromMotion                Motion?
}


model Resolution {
  id                        Int                      @id @default(autoincrement())
  createdAt                 DateTime                 @default(now())
  updatedAt                 DateTime                 @updatedAt
  introducedDate            DateTime?
  passDate                  DateTime?
  resolutionNumber          Int                      @unique
  resolutionTitle           String                   @db.VarChar(255)
  content                   String                   @db.Text
  introducedById            Int
  introducedBy              Person                   @relation("Resolution_IntroducedBy", fields: [introducedById], references: [id])
  ayeVote                   Person[]                 @relation("Resolution_Aye")
  nayVote                   Person[]                 @relation("Resolution_Nay")
  meetingId                 Int
  meeting                   Meeting                  @relation(fields: [meetingId], references: [id])
  fromMotion                Motion?
}

enum CommunicationType {
  EMAIL
  MAIL
}

model Communication {
  id                        Int                      @id @default(autoincrement())
  createdAt                 DateTime                 @default(now())
  updatedAt                 DateTime                 @updatedAt
  dateReceived              DateTime?
  from                      String                   @db.VarChar(255)
  content                   String?                  @db.Text
  communicationType         CommunicationType
  meetingId                 Int
  meeting                   Meeting                  @relation(fields: [meetingId], references: [id])
  fromMotion                Motion?
}

model PublicHearing {
  id                        Int                      @id @default(autoincrement())
  createdAt                 DateTime                 @default(now())
  updatedAt                 DateTime                 @updatedAt
  title                     String                   @unique @db.VarChar(255)
  topic                     String?                  @db.VarChar(255)
  content                   String?                  @db.Text
  from                      String                   @db.VarChar(255)
  meetingId                 Int
  meeting                   Meeting                  @relation(fields: [meetingId], references: [id])
  fromMotion                Motion?
}

model Bill {
  id                        Int                      @id @default(autoincrement())
  createdAt                 DateTime                 @default(now())
  updatedAt                 DateTime                 @updatedAt
  introducedDate            DateTime?
  passDate                  DateTime?
  billNumber                Int
  ordinance                 String?                  @db.VarChar(255)
  content                   String?                  @db.Text
  ayeVote                   Person[]                 @relation("Bill_Aye")
  nayVote                   Person[]                 @relation("Bill_Nay")
  introducedById            Int
  introducedBy              Person                   @relation("Bill_IntroducedBy", fields: [introducedById], references: [id])
  meetingId                 Int
  meeting                   Meeting                  @relation(fields: [meetingId], references: [id])
  fromMotion                Motion?
}

model BoardAppointment {
  id                        Int                      @id @default(autoincrement())
  createdAt                 DateTime                 @default(now())
  updatedAt                 DateTime                 @updatedAt
  expiration                DateTime?
  appointee                 String                   @db.VarChar(255)
  appointedTo               String?                  @db.VarChar(255)
  referredById              Int?
  referredBy                Person?                  @relation("BoardAppointment_Referrer", fields: [referredById], references: [id])
  meetingId                 Int
  meeting                   Meeting                  @relation(fields: [meetingId], references: [id])
  fromMotion                Motion?
}

model Request {
  id                        Int                      @id @default(autoincrement())
  createdAt                 DateTime                 @default(now())
  updatedAt                 DateTime                 @updatedAt
  petitioner                String                   @db.VarChar(255)
  title                     String                   @unique @db.VarChar(255)
  content                   String?                  @db.Text
  accepted                  Boolean                  @default(false)
  acceptorId                Int?
  acceptor                  Person?                  @relation("Request_Acceptor", fields: [acceptorId], references: [id])
  secondedById              Int?
  secondedBy                Person?                  @relation("Request_SecondedBy", fields: [secondedById], references: [id])
  meetingId                 Int
  meeting                   Meeting                  @relation(fields: [meetingId], references: [id])
  fromMotion                Motion?
}

model Announcement {
  id                        Int                      @id @default(autoincrement())
  createdAt                 DateTime                 @default(now())
  updatedAt                 DateTime                 @updatedAt
  content                   String                   @db.Text
  announcerId               Int
  announcer                 Person                   @relation("Announcement_Announcer", fields: [announcerId], references: [id])
  meetingId                 Int
  meeting                   Meeting                  @relation(fields: [meetingId], references: [id])
  fromMotion                Motion?
}
